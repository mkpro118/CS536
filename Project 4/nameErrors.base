tuple E {
  integer f.
}.

tuple D {
  tuple E e.
  integer p.
}.

tuple C {
  tuple D d.
}.

tuple B {
  tuple C c.
}.

tuple A {
  tuple G b.  !! 2,6| G undeclared, b is of invalid tuple type
}.

tuple Point {
  integer x.
  integer y.
}.

integer double{void x} [  !! 5| non-function is void
  tuple B a.
  logical t.
  integer f.
  y = a:c:d:e:f.  !! 2| y undeclared
  x = t:o. !! 3| colon access of non-tuple type (t is logical)
  y = f:q. !! 2,3| y is undeclared, colon acces of non-tuple type (f is integer)
  x = a:p. !! 4| tuple B does not have a member named p

  return x + 2.
]

$ Okay, sequential testing now
$ Lines where errors should occur have !!-style comments
$ Multiple errors are separated by commas

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!                     Multiply-declared identifier                     !!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

void mdt_func{} [
  integer test_var.
  logical test_var.  !! 1| variable
]

void func{logical var} [
  integer var. !! 1| variable with formal
]

void func{}[] !! 1| function

tuple MDT {integer t.}.

tuple MDT {logical t.}.  !! 1| tuple decl

tuple MDTv2 {
  integer x. integer y. logical x.  !! 1| tuple member
}.

void mdt_func_tuple{} [
  tuple MDT test_var.
  integer test_var.  !! 1| variable
]

void mdt_func_tuple2{integer test_var} [
  tuple MDT test_var.  !! 1| variable with formal
]

integer MDT. !! 1| variable with tuple-decl

$ The following should not be an error
void mdt_func_tuple3{integer MDT}[]
void mdt_func_ok{integer MDT}[
  while False [
    integer MDT.
    if True [logical MDT.]
    else [integer MDT.]
  ]
]

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!                        Undeclared identifier                         !!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

void ui_func{} [
  return UI. !! 2| UI is undeclared
]

void ui_func2{} [
  UI(). !! 2| UI is undeclared
]

void ui_func3{} [
  if cond []  !! 2| cond is undeclared
]

void ui_func4{} [
  logical cond.
  if cond [
    return UI. !! 2| UI is undeclared
  ]
]

void ui_func5{} [
  logical cond.
  if cond [
    integer UI.
  ] else [
    return UI. !! 2| UI is undeclared
  ]
]

void ui_func6{} [
  logical cond.
  if cond [ integer UI. ]
  return UI. !! 2| UI is undeclared
]

void ui_func7{} [
  logical cond.
  if cond [] else [ integer UI. ]
  return UI. !! 2| UI is undeclared
]

void ui_func8{} [
  logical cond.
  if cond [ integer UI. ] else [ integer UI. ]
  return UI. !! 2| UI is undeclared
]

void ui_func9{} [
  while cond []  !! 2| cond is undeclared
]

void ui_func10{} [
  logical cond.
  while cond [
    return UI. !! 2| UI is undeclared
  ]
]

void ui_func11{} [
  logical cond.
  while cond [
    logical UI.
  ]
  return UI. !! 2| UI is undeclared
]

void ui_func12{} [
  read >> UI. !! 2| UI is undeclared
  write << UI. !! 2| UI is undeclared
]

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!                    Colon-access of non-tuple type                    !!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

void caontt_func1{} [
  integer i.
  read >> i:p. !! 3| i is not a tuple
]

tuple CAONTT {
  logical logic.
}.

void caontt_func2{} [
  tuple CAONTT caontt.
  write << caontt:logic:true. !! 3| logic is not a tuple
]

tuple CAONTT2 {
  tuple CAONTT caontt.
}.

void caontt_func3{} [
  tuple CAONTT2 caontt.
  write << caontt:caontt:logic:false. !! 3| logic is not a tuple
]

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!                       Invalid tuple field name                       !!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

tuple ITFN {
  integer int.
  logical bool.
  tuple Point point.
}.

void itfn_func1{} [
  tuple ITFN itfn.
  write << itfn:INT. !! 4| INT doesn't exist
  write << itfn:BOOL. !! 4| BOOL doesn't exist
  write << itfn:POINT. !! 4| POINT doesn't exist
]

void itfn_func2{} [
  tuple ITFN itfn.
  read >> itfn:point:X. !! 4| X doesn't exist
  read >> itfn:point:Y. !! 4| Y doesn't exist
]

tuple L1 { integer x. }.
tuple L2 { tuple L1 one. }.
tuple L3 { tuple L2 two. }.

void itfn_func3{} [
  tuple L3 three.
  tuple L2 two.
  tuple L1 one.
  read >> one:one. !! 4| one doesn't exist
  read >> one:two. !! 4| two doesn't exist
  read >> one:three. !! 4| three doesn't exist
  read >> two:two. !! 4| two doesn't exist
  read >> two:three. !! 4| three doesn't exist
  read >> three:one. !! 4| one doesn't exist
  read >> three:three. !! 4| three doesn't exist

  write << two:one:y. !! 4| y doesn't exist
  write << three:two:y. !! 4| y doesn't exist
  return three:two:one:y. !! 4| y doesn't exist
]

void itfn_func4{} [
  tuple ITFN itfn.
  if True [
    read >> itfn:point:X. !! 4| X doesn't exist
    read >> itfn:point:Y. !! 4| Y doesn't exist
  ]
]

void itfn_func5{} [
  tuple ITFN itfn.
  if True [
    read >> itfn:point:X. !! 4| X doesn't exist
    read >> itfn:point:Y. !! 4| Y doesn't exist
  ] else [
    write << itfn:point:Y. !! 4| Y doesn't exist
    write << itfn:point:X. !! 4| X doesn't exist
  ]
]

void itfn_func6{} [
  tuple ITFN itfn.
  while True [
    read >> itfn:point:X. !! 4| X doesn't exist
    read >> itfn:point:Y. !! 4| Y doesn't exist
  ]
]

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!                      Non-function declared void                      !!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

tuple anon {
  void a. !! 5| non-function is void
  void b. !! 5| non-function is void
  void c. !! 5| non-function is void
}.

void nfdv_func1{void x} []  !! 5| non-function is void
void nfdv_func2{void x, void y} []  !! 5| non-function is void
void nfdv_func3{integer x, void y} []  !! 5| non-function is void
void nfdv_func4{void x, integer y} []  !! 5| non-function is void
void nfdv_func5{logical x, integer y, void z} []  !! 5| non-function is void

void nfdv_func6{void x} [ !! 5| non-function is void
  void a. !! 5| non-function is void
  void b. !! 5| non-function is void
]

void nfdv_func7{void x} [ !! 5| non-function is void
  while x [
    logical x.  !! No error
  ]
]

void nfdv_func8{void x} [ !! 5| non-function is void
  while x [
    void x.  !! 5| non-function is void
  ]
]

void nfdv_func9{void x} [ !! 5| non-function is void
  if x [
    logical x.  !! No error
  ]
]

void nfdv_func10{void x} [ !! 5| non-function is void
  if x [
    void x.  !! 5| non-function is void
  ]
]

void nfdv_func11{void x} [ !! 5| non-function is void
  if x [
    logical x.  !! No error
  ] else [
    logical x. !! No error
  ]
]

void nfdv_func12{void x} [ !! 5| non-function is void
  if x [
    void x.  !! 5| non-function is void
  ] else [
    void x. !! 5| non-function is void
  ]
]


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!                      Invalid name of tuple type                      !!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
