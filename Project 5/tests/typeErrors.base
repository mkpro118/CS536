$ Lines where errors should occur have !!-style comments
$ Multiple errors are separated by commas
$ Legend for errors:
$ +----+---------------------------------------------------+
$ |  1 |           Write attempt of function name          |
$ |  2 |            Write attempt of tuple name            |
$ |  3 |          Write attempt of tuple variable          |
$ |  4 |               Write attempt of void               |
$ |  5 |           Read attempt of function name           |
$ |  6 |             Read attempt of tuple name            |
$ |  7 |           Read attempt of tuple variable          |
$ |  8 |            Call attempt on non-function           |
$ |  9 |         Function call with wrong # of args        |
$ | 10 |       Actual type does not match formal type      |
$ | 11 |                Return value missing               |
$ | 12 |         Return with value in void function        |
$ | 13 |              Return value wrong type              |
$ | 14 | Arithmetic operator used with non-integer operand |
$ | 15 | Relational operator used with non-integer operand |
$ | 16 |   Logical operator used with non-logical operand  |
$ | 17 |    Non-logical expression used in if condition    |
$ | 18 |   Non-logical expression used in while condition  |
$ | 19 |                  Mismatched type                  |
$ | 20 |  Equality operator used with void function calls  |
$ | 21 |     Equality operator used with function names    |
$ | 22 |      Equality operator used with tuple names      |
$ | 23 |    Equality operator used with tuple variables    |
$ | 24 |            Assignment to function name            |
$ | 25 |              Assignment to tuple name             |
$ | 26 |            Assignment to tuple variable           |
$ +----+---------------------------------------------------+


integer double{integer x} [
  return x * False. !! 13,14| Cannot multiply with False ---
]

tuple User {
    integer age.
    logical student.
}.

tuple User user.

void set_user_age{logical age} [
    return (user:age = age). !! 12,19| ---
]

integer get_user_age{} [
    $ Apparently multiple returns is not a problem
    return user:student. !! 13|
    return user:student. !! 13|
    return user:student. !! 13|
]

logical is_user_a_student{} [
    return user:age. !! 13|
]

!! Okay, now we do sequential testing

!!!!!!!!!!!!!!!!!!!!!!!  Write attempt of function name  !!!!!!!!!!!!!!!!!!!!!!!
void WAOFN{} [
    $ Function level
    write << double. !! 1|

    $ in IF stmt
    if False [ write << WAOFN. ] !! 1|

    $ in IF-ELSE stmt
    if True [ write << set_user_age. ] !! 1|
    else [ write << get_user_age. ] !! 1|

    $ in WHILE stmt
    while False [ write << is_user_a_student. ] !! 1|

    $ in nested context
    if (True) [
        while False [
            write << get_user_age. !! 1|
        ]
    ] else [
        while False [
            if True [
                write << set_user_age. !! 1|
            ]
        ]
    ]
]

!!!!!!!!!!!!!!!!!!!!!!!!!  Write attempt of tuple name  !!!!!!!!!!!!!!!!!!!!!!!!
void WAOTN{} [
    $ Function level
    write << User. !! 2|

    $ in IF stmt
    if False [ write << User. ] !! 2|

    $ in IF-ELSE stmt
    if True [ write << User. ] !! 2|
    else [ write << User. ] !! 2|

    $ in WHILE stmt
    while False [ write << User. ] !! 2|

    $ in nested context
    if (True) [
        while False [
            write << User. !! 2|
        ]
    ] else [
        while False [
            if True [
                write << User. !! 2|
            ]
        ]
    ]
]

!!!!!!!!!!!!!!!!!!!!!!!  Write attempt of tuple variable  !!!!!!!!!!!!!!!!!!!!!!
void WAOTV{} [
    $ Function level
    write << user. !! 3|

    $ in IF stmt
    if False [ write << user. ] !! 3|

    $ in IF-ELSE stmt
    if True [ write << user. ] !! 3|
    else [ write << user. ] !! 3|

    $ in WHILE stmt
    while False [ write << user. ] !! 3|

    $ in nested context
    if (True) [
        while False [
            write << user. !! 3|
        ]
    ] else [
        while False [
            if True [
                write << user. !! 3|
            ]
        ]
    ]
]

!!!!!!!!!!!!!!!!!!!!!!!!!!!!  Write attempt of void  !!!!!!!!!!!!!!!!!!!!!!!!!!!
void WAOV{} [
    $ Function level
    write << set_user_age(False). !! 4|

    $ in IF stmt
    if False [ write << WAOFN(). ] !! 4|

    $ in IF-ELSE stmt
    if True [ write << WAOTN(). ] !! 4|
    else [ write << WAOTV(). ] !! 4|

    $ in WHILE stmt
    while False [ write << WAOV(). ] !! 4|

    $ in nested context
    if (True) [
        while False [
            write << WAOTN(). !! 4|
        ]
    ] else [
        while False [
            if True [
                write << WAOFN(). !! 4|
            ]
        ]
    ]
]

!!!!!!!!!!!!!!!!!!!!!!!  Read attempt of function name  !!!!!!!!!!!!!!!!!!!!!!!!
void RAOFN{} [
    $ Function level
    read >> double. !! 5|

    $ in IF stmt
    if False [ read >> RAOFN. ] !! 5|

    $ in IF-ELSE stmt
    if True [ read >> set_user_age. ] !! 5|
    else [ read >> get_user_age. ] !! 5|

    $ in WHILE stmt
    while False [ read >> is_user_a_student. ] !! 5|

    $ in nested context
    if (True) [
        while False [
            read >> is_user_a_student. !! 5|
        ]
    ] else [
        while False [
            if True [
                read >> get_user_age. !! 5|
            ]
        ]
    ]
]

!!!!!!!!!!!!!!!!!!!!!!!!!  Read attempt of tuple name  !!!!!!!!!!!!!!!!!!!!!!!!!
void RAOTN{} [
    $ Function level
    read >> User. !! 6|

    $ in IF stmt
    if False [ read >> User. ] !! 6|

    $ in IF-ELSE stmt
    if True [ read >> User. ] !! 6|
    else [ read >> User. ] !! 6|

    $ in WHILE stmt
    while False [ read >> User. ] !! 6|

    $ in nested context
    if (True) [
        while False [
            read >> User. !! 6|
        ]
    ] else [
        while False [
            if True [
                read >> User. !! 6|
            ]
        ]
    ]
]

!!!!!!!!!!!!!!!!!!!!!!!  Read attempt of tuple variable  !!!!!!!!!!!!!!!!!!!!!!!
void RAOTV{} [
    $ Function level
    read >> user. !! 7|

    $ in IF stmt
    if False [ read >> user. ] !! 7|

    $ in IF-ELSE stmt
    if True [ read >> user. ] !! 7|
    else [ read >> user. ] !! 7|

    $ in WHILE stmt
    while False [ read >> user. ] !! 7|

    $ in nested context
    if (True) [
        while False [
            read >> user. !! 7|
        ]
    ] else [
        while False [
            if True [
                read >> user. !! 7|
            ]
        ]
    ]
]

!!!!!!!!!!!!!!!!!!!!!!!!  Call attempt on non-function  !!!!!!!!!!!!!!!!!!!!!!!!
void CAONF{} [
    integer caonf.
    $ Function level
    caonf(). !! 8|

    $ in IF stmt
    if False [ caonf(). ] !! 8|

    $ in IF-ELSE stmt
    if True [ caonf(). ] !! 8|
    else [ caonf(). ] !! 8|

    $ in WHILE stmt
    while False [ caonf(). ] !! 8|

    $ in ASSIGN stmt
    caonf = caonf(). !! 8|
    user:age = caonf(). !! 8|

    $ in IF condition stmt
    if caonf() [] !! 8,17| ---

    $ in IF-ELSE condition stmt
    if caonf() [] !! 8,17| ---
    else []

    $ in WHILE condition stmt
    while caonf() [] !! 8,18| ---

    $ in nested context
    if (True) [
        while False [
            caonf(). !! 8|
        ]
    ] else [
        while False [
            if True [
                return caonf(). !! 8,12|
            ]
        ]
    ]

    $ in RETURN stmt
    return caonf(). !! 8,12|  ---
]

!!!!!!!!!!!!!!!!!!!!!  Function call with wrong # of args  !!!!!!!!!!!!!!!!!!!!!
logical FCWWNOA_func{integer a, integer b, logical c} []

logical FCWWNOA{} [
    integer fcwwnoa.
    $ Function level
    double(). !! 9|

    $ in IF stmt
    if False [ FCWWNOA_func(1, 2). ] !! 9|

    $ in IF-ELSE stmt
    if True [ double(False, user:age). ] !! 9|
    else [ FCWWNOA_func(True, fcwwnoa). ] !! 9|

    $ in WHILE stmt
    while False [ double(12, False). ] !! 9|

    $ in ASSIGN stmt
    fcwwnoa = FCWWNOA_func(True, 42). !! 9|
    user:age = double(100, fcwwnoa, 100). !! 9|

    $ in IF condition stmt
    if FCWWNOA_func("what", user:student) [] !! 9,17| ---

    $ in IF-ELSE condition stmt
    if FCWWNOA_func() [] !! 9,17| ---
    else []

    $ in WHILE condition stmt
    while double(double(600), True, fcwwnoa) [] !! 9,18| ---

    $ in nested context
    if (True) [
        while False [
            FCWWNOA_func(). !! 9|
        ]
    ] else [
        while False [
            if True [
                double(double(600), True). !! 9|
            ]
        ]
    ]

    $ in RETURN stmt
    return FCWWNOA_func(0). !! 9,13|
]

!!!!!!!!!!!!!!!!!!!  Actual type does not match formal type  !!!!!!!!!!!!!!!!!!!
logical ATDNMFT_func{logical a, integer b, logical c} []
logical ATDNMFT{} [
    logical atdnmft.
    $ Function level
    double(True). !! 10|

    $ in IF stmt
    if False [ double(False). ] !! 10|

    $ in IF-ELSE stmt
    if True [ double(user:student). ] !! 10|
    else [ double("atdnmft"). ] !! 10|

    $ in WHILE stmt
    while False [ ATDNMFT_func(1, False, 2). ] !! 10|

    $ in ASSIGN stmt
    atdnmft = ATDNMFT_func(True, True, True). !! 10|
    user:student = ATDNMFT_func(0, 1, 2). !! 10|

    $ in IF condition stmt
    if double("str") [] !! 10,17| ---

    $ in IF-ELSE condition stmt
    if ATDNMFT_func("logical", "False", "1") [] !! 10| ---
    else []

    $ in WHILE condition stmt
    while ATDNMFT_func(double(2), True, 0) [] !! 10| ---

    $ in nested context
    if (True) [
        while False [
            ATDNMFT_func(double(2), True, 0). !! 10|
        ]
    ] else [
        while False [
            if True [
                double("str"). !! 10|
            ]
        ]
    ]

    $ in RETURN stmt
    return ATDNMFT_func(0, 0, 0). !! 10|
]

!!!!!!!!!!!!!!!!!!!!!!!!!!!!  Return value missing  !!!!!!!!!!!!!!!!!!!!!!!!!!!!
integer RVM{} [
    $ Function level
    return. !! 11|

    $ in IF stmt
    if False [ return. ] !! 11|

    $ in IF-ELSE stmt
    if True [ return. ] !! 11|
    else [ return. ] !! 11|

    $ in WHILE stmt
    while False [ return. ] !! 11|

    $ in nested context
    if (True) [
        while False [
            return. !! 11|
        ]
    ] else [
        while False [
            if True [
                return. !! 11|
            ]
        ]
    ]
]

!!!!!!!!!!!!!!!!!!!!!  Return with value in void function  !!!!!!!!!!!!!!!!!!!!!
void RWVIVF{} [
    $ Function level
    return 12. !! 12|

    $ in IF stmt
    if False [ return True. ] !! 12|

    $ in IF-ELSE stmt
    if True [ return "String". ] !! 12|
    else [ return 0. ] !! 12|

    $ in WHILE stmt
    while False [ return "ret". ] !! 12|

    $ in nested context
    if (True) [
        while False [
            return False. !! 12|
        ]
    ] else [
        while False [
            if True [
                return True. !! 12|
            ]
        ]
    ]
]

!!!!!!!!!!!!!!!!!!!!!!!!!!  Return value wrong type  !!!!!!!!!!!!!!!!!!!!!!!!!!!
integer RWVIVF_I{} [
    $ Function level
    return True. !! 13|

    $ in IF stmt
    if False [ return user:student. ] !! 13|

    $ in IF-ELSE stmt
    if True [ return "String". ] !! 13|
    else [ return is_user_a_student(). ] !! 13|

    $ in WHILE stmt
    while False [ return "ret". ] !! 13|

    $ in nested context
    if (True) [
        while False [
            return False. !! 13|
        ]
    ] else [
        while False [
            if True [
                return True. !! 13|
            ]
        ]
    ]
]

logical RWVIVF_L{} [
    $ Function level
    return 0. !! 13|

    $ in IF stmt
    if False [ return user:age. ] !! 13|

    $ in IF-ELSE stmt
    if True [ return "String". ] !! 13|
    else [ return RWVIVF_I(). ] !! 13|

    $ in WHILE stmt
    while False [ return "ret". ] !! 13|

    $ in nested context
    if (True) [
        while False [
            return 12. !! 13|
        ]
    ] else [
        while False [
            if True [
                return 12. !! 13|
            ]
        ]
    ]
]

!!!!!!!!!!!!!!  Arithmetic operator used with non-integer operand  !!!!!!!!!!!!!
integer AOUWNIO{integer x, logical y} [
    integer z.

    $ in ASSIGN stmt
    z = x + y. !! 14|

    $ in CALL stmt
    double(x + y). !! 14,10|

    $ in IF stmt
    if (True) [z = x + y.] !! 14|

    $ in IF-ELSE stmt
    if (True) [z = x + y.] !! 14|
    else [z = x + y.] !! 14|

    $ in WHILE stmt
    while False [z = x + y.] !! 14|

    $ in complex expression
    x = (x * user:age) / (2 * (user:age - 5) - ATDNMFT()).  !! 14|

    $ in nested context
    if (True) [
        while False [
            x = (x+x*2-x*4/2)/(x+(2*is_user_a_student()/4)). !! 14|
        ]
    ] else [
        while False [
            if True [
                x = (x+x*2-x*4/2)/(x+(2*is_user_a_student()/4)). !! 14|
            ]
        ]
    ]

    $ with + operator
    z = user:age + True.         !! 14|
    z = True + RWVIVF_L.         !! 14|
    z = True + RWVIVF_L().       !! 14|
    z = True + False.            !! 14|
    z = True + User.             !! 14|
    z = True + user:age.         !! 14|
    z = user:student + user:age. !! 14|
    z = x + True.                !! 14|
    z = False + x.               !! 14|

    $ with - operator
    z = user:age - True.         !! 14|
    z = True - RWVIVF_L.         !! 14|
    z = True - RWVIVF_L().       !! 14|
    z = True - False.            !! 14|
    z = True - User.             !! 14|
    z = True - user:age.         !! 14|
    z = user:student - user:age. !! 14|
    z = x - True.                !! 14|
    z = False - x.               !! 14|
    z = -False.                  !! 14|

    $ with * operator
    z = user:age * True.         !! 14|
    z = True * RWVIVF_L.         !! 14|
    z = True * RWVIVF_L().       !! 14|
    z = True * False.            !! 14|
    z = True * User.             !! 14|
    z = True * user:age.         !! 14|
    z = user:student * user:age. !! 14|
    z = x * True.                !! 14|
    z = False * x.               !! 14|

    $ with / operator
    z = user:age / True.         !! 14|
    z = True / RWVIVF_L.         !! 14|
    z = True / RWVIVF_L().       !! 14|
    z = True / False.            !! 14|
    z = True / User.             !! 14|
    z = True / user:age.         !! 14|
    z = user:student / user:age. !! 14|
    z = x / True.                !! 14|
    z = False / x.               !! 14|

    $ in RETURN stmt
    return x + y. !! 14,13|
]

!!!!!!!!!!!!!!  Relational operator used with non-integer operand  !!!!!!!!!!!!!
logical ROUWNIO{integer x, logical y} [
    logical z.

    $ in ASSIGN stmt
    z = x < y. !! 15|

    $ in CALL stmt
    set_user_age(x < y). !! 15,10|

    $ in IF stmt
    if (True) [z = x >= y.] !! 15|

    $ in IF condition
    if x >= y [] !! 15,17|

    $ in IF-ELSE stmt
    if (True) [z = x <= y.] !! 15|
    else [z = x > y.] !! 15|

    $ in IF-ELSE condition
    if (x > y) [] !! 15,17|
    else [z = x < y.] !! 15|

    $ in WHILE stmt
    while False [z = x >= y.] !! 15|

    $ in WHILE condition
    while z > y [] !! 15,18|

    $ in expression
    x = (2 + 5) < True. !! 15|

    $ in nested context
    if (True) [
        while False [
            x = (x * user:age) / (2 * (user:age - 5)) < ATDNMFT().  !! 15|
        ]
    ] else [
        while False [
            if True [
                x = (x * user:age) / (2 * (user:age - 5)) < ATDNMFT().  !! 15|
            ]
        ]
    ]

    $ with < operator
    z = user:age < True.          !! 15|
    z = True < RWVIVF_L.          !! 15|
    z = True < RWVIVF_L().        !! 15|
    z = True < False.             !! 15|
    z = True < User.              !! 15|
    z = True < user:age.          !! 15|
    z = user:student < user:age.  !! 15|
    z = x < True.                 !! 15|
    z = False < x.                !! 15|

    $ with <= operator
    z = user:age <= True.         !! 15|
    z = True <= RWVIVF_L.         !! 15|
    z = True <= RWVIVF_L().       !! 15|
    z = True <= False.            !! 15|
    z = True <= User.             !! 15|
    z = True <= user:age.         !! 15|
    z = user:student <= user:age. !! 15|
    z = x <= True.                !! 15|
    z = False <= x.               !! 15|

    $ with > operator
    z = user:age > True.          !! 15|
    z = True > RWVIVF_L.          !! 15|
    z = True > RWVIVF_L().        !! 15|
    z = True > False.             !! 15|
    z = True > User.              !! 15|
    z = True > user:age.          !! 15|
    z = user:student > user:age.  !! 15|
    z = x > True.                 !! 15|
    z = False > x.                !! 15|

    $ with >= operator
    z = user:age >= True.         !! 15|
    z = True >= RWVIVF_L.         !! 15|
    z = True >= RWVIVF_L().       !! 15|
    z = True >= False.            !! 15|
    z = True >= User.             !! 15|
    z = True >= user:age.         !! 15|
    z = user:student >= user:age. !! 15|
    z = x >= True.                !! 15|
    z = False >= x.               !! 15|

    $ in RETURN stmt
    return x < y. !! 15,13|
]

!!!!!!!!!!!!!!!  Logical operator used with non-logical operand  !!!!!!!!!!!!!!!
logical LOUWNLO{integer x, logical y} [
    logical z.

    $ in ASSIGN stmt
    z = x & y. !! 16|

    $ in CALL stmt
    set_user_age(x | y). !! 16,10|

    $ in IF stmt
    if (True) [z = ~x & y.] !! 16|

    $ in IF condition
    if x | y [] !! 16,17|

    $ in IF-ELSE stmt
    if (True) [z = x & y | x.] !! 16|
    else [z = x | y & x.] !! 16|

    $ in IF-ELSE condition
    if (x | y) [] !! 16,17|
    else [z = x | ~y.] !! 16|

    $ in WHILE stmt
    while False [z = x & ~~y.] !! 16|

    $ in WHILE condition
    while ~z | x [] !! 16,18|

    $ in expression
    x = (2 + 5) & True. !! 16|

    $ in nested context
    if (True) [
        while False [
            x = (x * user:age) / (2 * (user:age - 5)) | ATDNMFT().  !! 16|
        ]
    ] else [
        while False [
            if True [
                x = (x * user:age) / (2 * (user:age - 5)) | ATDNMFT().  !! 16|
            ]
        ]
    ]

    $ with & operator
    z = user:age & True.         !! 16|
    z = True & RWVIVF_L.         !! 16|
    z = True & double(0).        !! 16|
    z = True & User.             !! 16|
    z = True & user:age.         !! 16|
    z = user:student & user:age. !! 16|
    z = x & True.                !! 16|
    z = False & x.               !! 16|

    $ with | operator
    z = user:age | True.         !! 16|
    z = True | RWVIVF_L.         !! 16|
    z = True | double(0).        !! 16|
    z = True | User.             !! 16|
    z = True | user:age.         !! 16|
    z = user:student | user:age. !! 16|
    z = x | True.                !! 16|
    z = False | x.               !! 16|

    $ with ~ operator
    z = ~user:age.         !! 16|
    z = ~RWVIVF_L.         !! 16|
    z = ~double(0).       !! 16|
    z = ~User.             !! 16|
    z = ~x.         !! 16|
    z = ~RWVIVF(). !! 16|

    $ in RETURN stmt
    return ~x. !! 16,13|
    return x | y. !! 16,13|
    return x & y. !! 16,13|
]

!!!!!!!!!!!!!!!!  Non-logical expression used in if condition  !!!!!!!!!!!!!!!!!
void NLEUIIC{} [
    if 1 []  !! 17|

    if 1 / 2 [] !! 17|
    else [
        if User [] !! 17|
        else [
            while True [
                if user [] !! 17|
                else [
                    if user:age [] !! 17|
                ]
            ]
        ]
    ]

    if 2 - 1 [  !! 17|
        if 0 * 2 [] else []  !! 17|
    ] else [
        if double(0) []  !! 17|
        else [
            if (double(double(double(1)))) []  !! 17|
            else [
                if get_user_age() []  !! 17|
            ]
        ]
    ]
]
